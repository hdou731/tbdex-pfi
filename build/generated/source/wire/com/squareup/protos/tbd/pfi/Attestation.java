// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.tbd.pfi.Attestation in pfi.proto
package com.squareup.protos.tbd.pfi;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Attestation extends Message<Attestation, Attestation.Builder> {
  public static final ProtoAdapter<Attestation> ADAPTER = new ProtoAdapter_Attestation();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PAYLOAD = "";

  public static final String DEFAULT_SIGNATURE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.protos.tbd.pfi.Protected#ADAPTER",
      declaredName = "protected"
  )
  public final Protected protected_;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String payload;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String signature;

  public Attestation(Protected protected_, String payload, String signature) {
    this(protected_, payload, signature, ByteString.EMPTY);
  }

  public Attestation(Protected protected_, String payload, String signature,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.protected_ = protected_;
    this.payload = payload;
    this.signature = signature;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.protected_ = protected_;
    builder.payload = payload;
    builder.signature = signature;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Attestation)) return false;
    Attestation o = (Attestation) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(protected_, o.protected_)
        && Internal.equals(payload, o.payload)
        && Internal.equals(signature, o.signature);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (protected_ != null ? protected_.hashCode() : 0);
      result = result * 37 + (payload != null ? payload.hashCode() : 0);
      result = result * 37 + (signature != null ? signature.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (protected_ != null) builder.append(", protected=").append(protected_);
    if (payload != null) builder.append(", payload=").append(Internal.sanitize(payload));
    if (signature != null) builder.append(", signature=").append(Internal.sanitize(signature));
    return builder.replace(0, 2, "Attestation{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Attestation, Builder> {
    public Protected protected_;

    public String payload;

    public String signature;

    public Builder() {
    }

    public Builder protected_(Protected protected_) {
      this.protected_ = protected_;
      return this;
    }

    public Builder payload(String payload) {
      this.payload = payload;
      return this;
    }

    public Builder signature(String signature) {
      this.signature = signature;
      return this;
    }

    @Override
    public Attestation build() {
      return new Attestation(protected_, payload, signature, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Attestation extends ProtoAdapter<Attestation> {
    public ProtoAdapter_Attestation() {
      super(FieldEncoding.LENGTH_DELIMITED, Attestation.class, "type.googleapis.com/squareup.protos.tbd.pfi.Attestation", Syntax.PROTO_2, null, "pfi.proto");
    }

    @Override
    public int encodedSize(Attestation value) {
      int result = 0;
      result += Protected.ADAPTER.encodedSizeWithTag(1, value.protected_);
      result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.payload);
      result += ProtoAdapter.STRING.encodedSizeWithTag(3, value.signature);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, Attestation value) throws IOException {
      Protected.ADAPTER.encodeWithTag(writer, 1, value.protected_);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.payload);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.signature);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, Attestation value) throws IOException {
      writer.writeBytes(value.unknownFields());
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.signature);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.payload);
      Protected.ADAPTER.encodeWithTag(writer, 1, value.protected_);
    }

    @Override
    public Attestation decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.protected_(Protected.ADAPTER.decode(reader)); break;
          case 2: builder.payload(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.signature(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public Attestation redact(Attestation value) {
      Builder builder = value.newBuilder();
      if (builder.protected_ != null) builder.protected_ = Protected.ADAPTER.redact(builder.protected_);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
