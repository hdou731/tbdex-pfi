// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.tbd.pfi.BankAccount in pfi.proto
package com.squareup.protos.tbd.pfi;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class BankAccount extends Message<BankAccount, BankAccount.Builder> {
  public static final ProtoAdapter<BankAccount> ADAPTER = new ProtoAdapter_BankAccount();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_TRACKINGREF = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String trackingRef;

  public BankAccount(String id, String trackingRef) {
    this(id, trackingRef, ByteString.EMPTY);
  }

  public BankAccount(String id, String trackingRef, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.trackingRef = trackingRef;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.trackingRef = trackingRef;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BankAccount)) return false;
    BankAccount o = (BankAccount) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(trackingRef, o.trackingRef);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (trackingRef != null ? trackingRef.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(Internal.sanitize(id));
    if (trackingRef != null) builder.append(", trackingRef=").append(Internal.sanitize(trackingRef));
    return builder.replace(0, 2, "BankAccount{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<BankAccount, Builder> {
    public String id;

    public String trackingRef;

    public Builder() {
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder trackingRef(String trackingRef) {
      this.trackingRef = trackingRef;
      return this;
    }

    @Override
    public BankAccount build() {
      return new BankAccount(id, trackingRef, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_BankAccount extends ProtoAdapter<BankAccount> {
    public ProtoAdapter_BankAccount() {
      super(FieldEncoding.LENGTH_DELIMITED, BankAccount.class, "type.googleapis.com/squareup.protos.tbd.pfi.BankAccount", Syntax.PROTO_2, null, "pfi.proto");
    }

    @Override
    public int encodedSize(BankAccount value) {
      int result = 0;
      result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.id);
      result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.trackingRef);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, BankAccount value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.trackingRef);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, BankAccount value) throws IOException {
      writer.writeBytes(value.unknownFields());
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.trackingRef);
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
    }

    @Override
    public BankAccount decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.trackingRef(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public BankAccount redact(BankAccount value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
