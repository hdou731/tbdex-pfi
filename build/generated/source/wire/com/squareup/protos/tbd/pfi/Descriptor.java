// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.tbd.pfi.Descriptor in pfi.proto
package com.squareup.protos.tbd.pfi;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Descriptor extends Message<Descriptor, Descriptor.Builder> {
  public static final ProtoAdapter<Descriptor> ADAPTER = new ProtoAdapter_Descriptor();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_OBJECT_ID = "";

  public static final String DEFAULT_CID = "";

  public static final Long DEFAULT_CLOCK = 0L;

  public static final String DEFAULT_METHOD = "";

  public static final String DEFAULT_SCHEMA = "";

  public static final String DEFAULT_DATA_FORMAT = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String object_id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cid;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long clock;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String method;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String schema;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String data_format;

  public Descriptor(String object_id, String cid, Long clock, String method, String schema,
      String data_format) {
    this(object_id, cid, clock, method, schema, data_format, ByteString.EMPTY);
  }

  public Descriptor(String object_id, String cid, Long clock, String method, String schema,
      String data_format, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.object_id = object_id;
    this.cid = cid;
    this.clock = clock;
    this.method = method;
    this.schema = schema;
    this.data_format = data_format;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.object_id = object_id;
    builder.cid = cid;
    builder.clock = clock;
    builder.method = method;
    builder.schema = schema;
    builder.data_format = data_format;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Descriptor)) return false;
    Descriptor o = (Descriptor) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(object_id, o.object_id)
        && Internal.equals(cid, o.cid)
        && Internal.equals(clock, o.clock)
        && Internal.equals(method, o.method)
        && Internal.equals(schema, o.schema)
        && Internal.equals(data_format, o.data_format);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (object_id != null ? object_id.hashCode() : 0);
      result = result * 37 + (cid != null ? cid.hashCode() : 0);
      result = result * 37 + (clock != null ? clock.hashCode() : 0);
      result = result * 37 + (method != null ? method.hashCode() : 0);
      result = result * 37 + (schema != null ? schema.hashCode() : 0);
      result = result * 37 + (data_format != null ? data_format.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (object_id != null) builder.append(", object_id=").append(Internal.sanitize(object_id));
    if (cid != null) builder.append(", cid=").append(Internal.sanitize(cid));
    if (clock != null) builder.append(", clock=").append(clock);
    if (method != null) builder.append(", method=").append(Internal.sanitize(method));
    if (schema != null) builder.append(", schema=").append(Internal.sanitize(schema));
    if (data_format != null) builder.append(", data_format=").append(Internal.sanitize(data_format));
    return builder.replace(0, 2, "Descriptor{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Descriptor, Builder> {
    public String object_id;

    public String cid;

    public Long clock;

    public String method;

    public String schema;

    public String data_format;

    public Builder() {
    }

    public Builder object_id(String object_id) {
      this.object_id = object_id;
      return this;
    }

    public Builder cid(String cid) {
      this.cid = cid;
      return this;
    }

    public Builder clock(Long clock) {
      this.clock = clock;
      return this;
    }

    public Builder method(String method) {
      this.method = method;
      return this;
    }

    public Builder schema(String schema) {
      this.schema = schema;
      return this;
    }

    public Builder data_format(String data_format) {
      this.data_format = data_format;
      return this;
    }

    @Override
    public Descriptor build() {
      return new Descriptor(object_id, cid, clock, method, schema, data_format, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Descriptor extends ProtoAdapter<Descriptor> {
    public ProtoAdapter_Descriptor() {
      super(FieldEncoding.LENGTH_DELIMITED, Descriptor.class, "type.googleapis.com/squareup.protos.tbd.pfi.Descriptor", Syntax.PROTO_2, null, "pfi.proto");
    }

    @Override
    public int encodedSize(Descriptor value) {
      int result = 0;
      result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.object_id);
      result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.cid);
      result += ProtoAdapter.INT64.encodedSizeWithTag(3, value.clock);
      result += ProtoAdapter.STRING.encodedSizeWithTag(4, value.method);
      result += ProtoAdapter.STRING.encodedSizeWithTag(5, value.schema);
      result += ProtoAdapter.STRING.encodedSizeWithTag(6, value.data_format);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, Descriptor value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.object_id);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.cid);
      ProtoAdapter.INT64.encodeWithTag(writer, 3, value.clock);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.method);
      ProtoAdapter.STRING.encodeWithTag(writer, 5, value.schema);
      ProtoAdapter.STRING.encodeWithTag(writer, 6, value.data_format);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, Descriptor value) throws IOException {
      writer.writeBytes(value.unknownFields());
      ProtoAdapter.STRING.encodeWithTag(writer, 6, value.data_format);
      ProtoAdapter.STRING.encodeWithTag(writer, 5, value.schema);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.method);
      ProtoAdapter.INT64.encodeWithTag(writer, 3, value.clock);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.cid);
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.object_id);
    }

    @Override
    public Descriptor decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.object_id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.cid(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.clock(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.method(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.schema(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.data_format(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public Descriptor redact(Descriptor value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
