// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.tbd.pfi.Destination in pfi.proto
package com.squareup.protos.tbd.pfi;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Destination extends Message<Destination, Destination.Builder> {
  public static final ProtoAdapter<Destination> ADAPTER = new ProtoAdapter_Destination();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_TYPE = "";

  public static final String DEFAULT_ADDRESS = "";

  public static final String DEFAULT_CHAIN = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String type;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String address;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String chain;

  public Destination(String id, String type, String address, String chain) {
    this(id, type, address, chain, ByteString.EMPTY);
  }

  public Destination(String id, String type, String address, String chain,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.type = type;
    this.address = address;
    this.chain = chain;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.type = type;
    builder.address = address;
    builder.chain = chain;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Destination)) return false;
    Destination o = (Destination) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(type, o.type)
        && Internal.equals(address, o.address)
        && Internal.equals(chain, o.chain);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 0);
      result = result * 37 + (chain != null ? chain.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(Internal.sanitize(id));
    if (type != null) builder.append(", type=").append(Internal.sanitize(type));
    if (address != null) builder.append(", address=").append(Internal.sanitize(address));
    if (chain != null) builder.append(", chain=").append(Internal.sanitize(chain));
    return builder.replace(0, 2, "Destination{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Destination, Builder> {
    public String id;

    public String type;

    public String address;

    public String chain;

    public Builder() {
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder type(String type) {
      this.type = type;
      return this;
    }

    public Builder address(String address) {
      this.address = address;
      return this;
    }

    public Builder chain(String chain) {
      this.chain = chain;
      return this;
    }

    @Override
    public Destination build() {
      return new Destination(id, type, address, chain, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Destination extends ProtoAdapter<Destination> {
    public ProtoAdapter_Destination() {
      super(FieldEncoding.LENGTH_DELIMITED, Destination.class, "type.googleapis.com/squareup.protos.tbd.pfi.Destination", Syntax.PROTO_2, null, "pfi.proto");
    }

    @Override
    public int encodedSize(Destination value) {
      int result = 0;
      result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.id);
      result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.type);
      result += ProtoAdapter.STRING.encodedSizeWithTag(3, value.address);
      result += ProtoAdapter.STRING.encodedSizeWithTag(4, value.chain);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, Destination value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.type);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.address);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.chain);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, Destination value) throws IOException {
      writer.writeBytes(value.unknownFields());
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.chain);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.address);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.type);
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
    }

    @Override
    public Destination decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.type(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.address(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.chain(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public Destination redact(Destination value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
