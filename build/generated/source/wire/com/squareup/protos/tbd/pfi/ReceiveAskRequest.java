// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.tbd.pfi.ReceiveAskRequest in pfi.proto
package com.squareup.protos.tbd.pfi;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ReceiveAskRequest extends Message<ReceiveAskRequest, ReceiveAskRequest.Builder> {
  public static final ProtoAdapter<ReceiveAskRequest> ADAPTER = new ProtoAdapter_ReceiveAskRequest();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_AMOUNT_CENTS = 0;

  public static final CurrencyCode DEFAULT_SOURCE_CURRENCY_CODE = CurrencyCode.USD;

  public static final CurrencyCode DEFAULT_DESTINATION_CURRENCY_CODE = CurrencyCode.USD;

  public static final String DEFAULT_IDEMPOTENCE_TOKEN = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer amount_cents;

  @WireField(
      tag = 2,
      adapter = "com.squareup.protos.tbd.pfi.CurrencyCode#ADAPTER"
  )
  public final CurrencyCode source_currency_code;

  @WireField(
      tag = 3,
      adapter = "com.squareup.protos.tbd.pfi.CurrencyCode#ADAPTER"
  )
  public final CurrencyCode destination_currency_code;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idempotence_token;

  public ReceiveAskRequest(Integer amount_cents, CurrencyCode source_currency_code,
      CurrencyCode destination_currency_code, String idempotence_token) {
    this(amount_cents, source_currency_code, destination_currency_code, idempotence_token, ByteString.EMPTY);
  }

  public ReceiveAskRequest(Integer amount_cents, CurrencyCode source_currency_code,
      CurrencyCode destination_currency_code, String idempotence_token, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.amount_cents = amount_cents;
    this.source_currency_code = source_currency_code;
    this.destination_currency_code = destination_currency_code;
    this.idempotence_token = idempotence_token;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.amount_cents = amount_cents;
    builder.source_currency_code = source_currency_code;
    builder.destination_currency_code = destination_currency_code;
    builder.idempotence_token = idempotence_token;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ReceiveAskRequest)) return false;
    ReceiveAskRequest o = (ReceiveAskRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(amount_cents, o.amount_cents)
        && Internal.equals(source_currency_code, o.source_currency_code)
        && Internal.equals(destination_currency_code, o.destination_currency_code)
        && Internal.equals(idempotence_token, o.idempotence_token);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (amount_cents != null ? amount_cents.hashCode() : 0);
      result = result * 37 + (source_currency_code != null ? source_currency_code.hashCode() : 0);
      result = result * 37 + (destination_currency_code != null ? destination_currency_code.hashCode() : 0);
      result = result * 37 + (idempotence_token != null ? idempotence_token.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (amount_cents != null) builder.append(", amount_cents=").append(amount_cents);
    if (source_currency_code != null) builder.append(", source_currency_code=").append(source_currency_code);
    if (destination_currency_code != null) builder.append(", destination_currency_code=").append(destination_currency_code);
    if (idempotence_token != null) builder.append(", idempotence_token=").append(Internal.sanitize(idempotence_token));
    return builder.replace(0, 2, "ReceiveAskRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ReceiveAskRequest, Builder> {
    public Integer amount_cents;

    public CurrencyCode source_currency_code;

    public CurrencyCode destination_currency_code;

    public String idempotence_token;

    public Builder() {
    }

    public Builder amount_cents(Integer amount_cents) {
      this.amount_cents = amount_cents;
      return this;
    }

    public Builder source_currency_code(CurrencyCode source_currency_code) {
      this.source_currency_code = source_currency_code;
      return this;
    }

    public Builder destination_currency_code(CurrencyCode destination_currency_code) {
      this.destination_currency_code = destination_currency_code;
      return this;
    }

    public Builder idempotence_token(String idempotence_token) {
      this.idempotence_token = idempotence_token;
      return this;
    }

    @Override
    public ReceiveAskRequest build() {
      return new ReceiveAskRequest(amount_cents, source_currency_code, destination_currency_code, idempotence_token, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ReceiveAskRequest extends ProtoAdapter<ReceiveAskRequest> {
    public ProtoAdapter_ReceiveAskRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, ReceiveAskRequest.class, "type.googleapis.com/squareup.protos.tbd.pfi.ReceiveAskRequest", Syntax.PROTO_2, null, "pfi.proto");
    }

    @Override
    public int encodedSize(ReceiveAskRequest value) {
      int result = 0;
      result += ProtoAdapter.INT32.encodedSizeWithTag(1, value.amount_cents);
      result += CurrencyCode.ADAPTER.encodedSizeWithTag(2, value.source_currency_code);
      result += CurrencyCode.ADAPTER.encodedSizeWithTag(3, value.destination_currency_code);
      result += ProtoAdapter.STRING.encodedSizeWithTag(4, value.idempotence_token);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, ReceiveAskRequest value) throws IOException {
      ProtoAdapter.INT32.encodeWithTag(writer, 1, value.amount_cents);
      CurrencyCode.ADAPTER.encodeWithTag(writer, 2, value.source_currency_code);
      CurrencyCode.ADAPTER.encodeWithTag(writer, 3, value.destination_currency_code);
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.idempotence_token);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, ReceiveAskRequest value) throws IOException {
      writer.writeBytes(value.unknownFields());
      ProtoAdapter.STRING.encodeWithTag(writer, 4, value.idempotence_token);
      CurrencyCode.ADAPTER.encodeWithTag(writer, 3, value.destination_currency_code);
      CurrencyCode.ADAPTER.encodeWithTag(writer, 2, value.source_currency_code);
      ProtoAdapter.INT32.encodeWithTag(writer, 1, value.amount_cents);
    }

    @Override
    public ReceiveAskRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.amount_cents(ProtoAdapter.INT32.decode(reader)); break;
          case 2: {
            try {
              builder.source_currency_code(CurrencyCode.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 3: {
            try {
              builder.destination_currency_code(CurrencyCode.ADAPTER.decode(reader));
            } catch (ProtoAdapter.EnumConstantNotFoundException e) {
              builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
            }
            break;
          }
          case 4: builder.idempotence_token(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public ReceiveAskRequest redact(ReceiveAskRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
