// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.tbd.pfi.CreateBankAccountRequest in pfi.proto
package com.squareup.protos.tbd.pfi;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class CreateBankAccountRequest extends Message<CreateBankAccountRequest, CreateBankAccountRequest.Builder> {
  public static final ProtoAdapter<CreateBankAccountRequest> ADAPTER = new ProtoAdapter_CreateBankAccountRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ACCOUNTNUMBER = "";

  public static final String DEFAULT_ROUTINGNUMBER = "";

  public static final String DEFAULT_IDEMPOTENCYKEY = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String accountNumber;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String routingNumber;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idempotencyKey;

  @WireField(
      tag = 4,
      adapter = "com.squareup.protos.tbd.pfi.BankAddress#ADAPTER"
  )
  public final BankAddress bankAddress;

  @WireField(
      tag = 5,
      adapter = "com.squareup.protos.tbd.pfi.BillingDetails#ADAPTER"
  )
  public final BillingDetails billingDetails;

  public CreateBankAccountRequest(String accountNumber, String routingNumber, String idempotencyKey,
      BankAddress bankAddress, BillingDetails billingDetails) {
    this(accountNumber, routingNumber, idempotencyKey, bankAddress, billingDetails, ByteString.EMPTY);
  }

  public CreateBankAccountRequest(String accountNumber, String routingNumber, String idempotencyKey,
      BankAddress bankAddress, BillingDetails billingDetails, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.accountNumber = accountNumber;
    this.routingNumber = routingNumber;
    this.idempotencyKey = idempotencyKey;
    this.bankAddress = bankAddress;
    this.billingDetails = billingDetails;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.accountNumber = accountNumber;
    builder.routingNumber = routingNumber;
    builder.idempotencyKey = idempotencyKey;
    builder.bankAddress = bankAddress;
    builder.billingDetails = billingDetails;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CreateBankAccountRequest)) return false;
    CreateBankAccountRequest o = (CreateBankAccountRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(accountNumber, o.accountNumber)
        && Internal.equals(routingNumber, o.routingNumber)
        && Internal.equals(idempotencyKey, o.idempotencyKey)
        && Internal.equals(bankAddress, o.bankAddress)
        && Internal.equals(billingDetails, o.billingDetails);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (accountNumber != null ? accountNumber.hashCode() : 0);
      result = result * 37 + (routingNumber != null ? routingNumber.hashCode() : 0);
      result = result * 37 + (idempotencyKey != null ? idempotencyKey.hashCode() : 0);
      result = result * 37 + (bankAddress != null ? bankAddress.hashCode() : 0);
      result = result * 37 + (billingDetails != null ? billingDetails.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (accountNumber != null) builder.append(", accountNumber=").append(Internal.sanitize(accountNumber));
    if (routingNumber != null) builder.append(", routingNumber=").append(Internal.sanitize(routingNumber));
    if (idempotencyKey != null) builder.append(", idempotencyKey=").append(Internal.sanitize(idempotencyKey));
    if (bankAddress != null) builder.append(", bankAddress=").append(bankAddress);
    if (billingDetails != null) builder.append(", billingDetails=").append(billingDetails);
    return builder.replace(0, 2, "CreateBankAccountRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<CreateBankAccountRequest, Builder> {
    public String accountNumber;

    public String routingNumber;

    public String idempotencyKey;

    public BankAddress bankAddress;

    public BillingDetails billingDetails;

    public Builder() {
    }

    public Builder accountNumber(String accountNumber) {
      this.accountNumber = accountNumber;
      return this;
    }

    public Builder routingNumber(String routingNumber) {
      this.routingNumber = routingNumber;
      return this;
    }

    public Builder idempotencyKey(String idempotencyKey) {
      this.idempotencyKey = idempotencyKey;
      return this;
    }

    public Builder bankAddress(BankAddress bankAddress) {
      this.bankAddress = bankAddress;
      return this;
    }

    public Builder billingDetails(BillingDetails billingDetails) {
      this.billingDetails = billingDetails;
      return this;
    }

    @Override
    public CreateBankAccountRequest build() {
      return new CreateBankAccountRequest(accountNumber, routingNumber, idempotencyKey, bankAddress, billingDetails, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CreateBankAccountRequest extends ProtoAdapter<CreateBankAccountRequest> {
    public ProtoAdapter_CreateBankAccountRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, CreateBankAccountRequest.class, "type.googleapis.com/squareup.protos.tbd.pfi.CreateBankAccountRequest", Syntax.PROTO_2, null, "pfi.proto");
    }

    @Override
    public int encodedSize(CreateBankAccountRequest value) {
      int result = 0;
      result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.accountNumber);
      result += ProtoAdapter.STRING.encodedSizeWithTag(2, value.routingNumber);
      result += ProtoAdapter.STRING.encodedSizeWithTag(3, value.idempotencyKey);
      result += BankAddress.ADAPTER.encodedSizeWithTag(4, value.bankAddress);
      result += BillingDetails.ADAPTER.encodedSizeWithTag(5, value.billingDetails);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, CreateBankAccountRequest value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.accountNumber);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.routingNumber);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.idempotencyKey);
      BankAddress.ADAPTER.encodeWithTag(writer, 4, value.bankAddress);
      BillingDetails.ADAPTER.encodeWithTag(writer, 5, value.billingDetails);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, CreateBankAccountRequest value) throws
        IOException {
      writer.writeBytes(value.unknownFields());
      BillingDetails.ADAPTER.encodeWithTag(writer, 5, value.billingDetails);
      BankAddress.ADAPTER.encodeWithTag(writer, 4, value.bankAddress);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.idempotencyKey);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.routingNumber);
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.accountNumber);
    }

    @Override
    public CreateBankAccountRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.accountNumber(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.routingNumber(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.idempotencyKey(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.bankAddress(BankAddress.ADAPTER.decode(reader)); break;
          case 5: builder.billingDetails(BillingDetails.ADAPTER.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public CreateBankAccountRequest redact(CreateBankAccountRequest value) {
      Builder builder = value.newBuilder();
      if (builder.bankAddress != null) builder.bankAddress = BankAddress.ADAPTER.redact(builder.bankAddress);
      if (builder.billingDetails != null) builder.billingDetails = BillingDetails.ADAPTER.redact(builder.billingDetails);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
